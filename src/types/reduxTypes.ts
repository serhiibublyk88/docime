///reduxTypes

/// üîπ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
export interface User {
  id: string;
  username: string;
  email?: string;
  role: number;
  token?: string;
}

/// üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (Auth)
export interface AuthState {
  user: User | null;
}

/// üîπ –û–¥–Ω–∞ –≥—Ä—É–ø–ø–∞
export interface Group {
  id: string;
  name: string;
  description?: string;
  membersCount: number; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
  createdBy: string;
  createdAt: string;
}

/// üîπ –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö –≥—Ä—É–ø–ø (–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ)
export interface GroupsState {
  groups: Group[];
}

/// üîπ –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø—ã (–≤—ã–±—Ä–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞)
export interface GroupState {
  group: Group | null;
  members: User[];
  isLoading: boolean;
  error: string | null;
}

/// üîπ –¢–µ—Å—Ç
export interface Test {
  id: string;
  name: string;
  description: string;
  timeLimit: number;
}

/// üîπ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤
export interface TestState {
  tests: Test[];
  currentTest: Test | null;
}

/// üîπ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞
export interface TestResult {
  id: string;
  testId: string;
  userId: string;
  score: number;
  maxScore: number;
  percentage: number;
  grade: number;
}

/// üîπ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤
export interface ResultState {
  results: TestResult[];
}
