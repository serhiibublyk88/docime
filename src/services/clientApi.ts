import axios from "axios";
import { store, authActions } from "../redux";

export const api = axios.create({
  baseURL: import.meta.env.VITE_API_URL || "http://localhost:5000/api",
  headers: {
    "Content-Type": "application/json",
  },
  withCredentials: true, // ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫—É–∫–∏
});

// üîπ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º `credentials: "include"` –∫–æ –≤—Å–µ–º –∑–∞–ø—Ä–æ—Å–∞–º
api.interceptors.request.use((config) => {
  config.withCredentials = true; // ‚úÖ –¢–µ–ø–µ—Ä—å –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –ø–µ—Ä–µ–¥–∞—é—Ç –∫—É–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
  return config;
});

api.interceptors.response.use(
  (response) => response,
  (error) => {
    if (error.response) {
      const { status } = error.response;

      if (status === 401) {
        const storedUser = JSON.parse(localStorage.getItem("user") || "null");
        if (!storedUser) {
          store.dispatch(authActions.logout()); // ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏ 401
        }
      }
    }

    return Promise.reject(error);
  }
);
